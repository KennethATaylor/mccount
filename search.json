[{"path":"https://kennethataylor.github.io/mccount/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 mccount authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://kennethataylor.github.io/mccount/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Kenneth . Taylor. Author, maintainer.","code":""},{"path":"https://kennethataylor.github.io/mccount/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Taylor K (2025). mccount: Estimate Recurrent Event Burden Competing Risks. R package version 0.0.0.9000, https://github.com/KennethATaylor/mccount.","code":"@Manual{,   title = {mccount: Estimate Recurrent Event Burden with Competing Risks},   author = {Kenneth A. Taylor},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/KennethATaylor/mccount}, }"},{"path":[]},{"path":"https://kennethataylor.github.io/mccount/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Estimate Recurrent Event Burden with Competing Risks","text":"mccount provides tools estimate mean cumulative count (MCC) recurrent events presence competing risks. Unlike traditional cumulative incidence methods consider first occurrence event, MCC accounts multiple occurrences event type per individual, providing informative measure total burden recurrent events population. Available MCC methods package include Dong-Yasui sum cumulative incidences estimators, based work Dong, et al.1 Users can also estimate MCC using weighted Dong-Yasui estimator.2","code":""},{"path":"https://kennethataylor.github.io/mccount/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Estimate Recurrent Event Burden with Competing Risks","text":"can install development version mccount like :","code":"# install.packages(\"pak\") pak::pkg_install(\"KennethATaylor/mccount\")"},{"path":"https://kennethataylor.github.io/mccount/index.html","id":"why-mean-cumulative-count","dir":"","previous_headings":"","what":"Why Mean Cumulative Count?","title":"Estimate Recurrent Event Burden with Competing Risks","text":"context clinical epidemiological studies, subjects may experience multiple recurrent events given follow-period. Traditional methods like Kaplan-Meier cumulative incidence account first occurrence event ignore subsequent recurrent events, can lead underestimation true disease burden. MCC: Summarizes events occur population given time Accounts competing risks may terminate follow-Provides complete picture recurrent event burden interpretable expected number events per subject specific time point","code":""},{"path":"https://kennethataylor.github.io/mccount/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Estimate Recurrent Event Burden with Competing Risks","text":"use mccount research, please cite package addition relevant original methodology paper(s).","code":"citation(\"mccount\")"},{"path":"https://kennethataylor.github.io/mccount/reference/as.data.frame.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert mcc object to data.frame — as.data.frame.mcc","title":"Convert mcc object to data.frame — as.data.frame.mcc","text":"Extracts MCC estimates mcc object returns standard data.frame. useful analysis working packages expect standard data.frame objects.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as.data.frame.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert mcc object to data.frame — as.data.frame.mcc","text":"","code":"# S3 method for class 'mcc' as.data.frame(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/as.data.frame.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert mcc object to data.frame — as.data.frame.mcc","text":"x mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as.data.frame.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert mcc object to data.frame — as.data.frame.mcc","text":"data.frame MCC estimates","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as.data.frame.mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert mcc object to data.frame — as.data.frame.mcc","text":"","code":"# Create sample data library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Convert to data.frame mcc_df <- as.data.frame(mcc_result) print(mcc_df) #>   time  mcc #> 1    0 0.00 #> 2    2 0.25 #> 3    3 0.50 #> 4    6 0.75 #> 5    7 1.00 class(mcc_df)  # \"data.frame\" #> [1] \"data.frame\"  # This is equivalent to extracting mcc_final identical(mcc_df, as.data.frame(mcc_result$mcc_final)) #> [1] TRUE  # Useful for further analysis with base R functions summary(mcc_df) #>       time          mcc       #>  Min.   :0.0   Min.   :0.00   #>  1st Qu.:2.0   1st Qu.:0.25   #>  Median :3.0   Median :0.50   #>  Mean   :3.6   Mean   :0.50   #>  3rd Qu.:6.0   3rd Qu.:0.75   #>  Max.   :7.0   Max.   :1.00   plot(mcc_df$time, mcc_df$mcc, type = \"s\")   # Clean up rm(df, mcc_result, mcc_df)"},{"path":"https://kennethataylor.github.io/mccount/reference/as_mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert objects to mcc class — as_mcc","title":"Convert objects to mcc class — as_mcc","text":"Converts objects MCC class. useful calculation results sources want treat MCC objects.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as_mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert objects to mcc class — as_mcc","text":"","code":"as_mcc(x, method, weighted = FALSE, by_group = NULL, call = NULL, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/as_mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert objects to mcc class — as_mcc","text":"x Object convert mcc method Method used calculation (\"equation\" \"sci\") weighted Logical indicating weighted estimation used by_group Optional name grouping variable call Optional function call store ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as_mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert objects to mcc class — as_mcc","text":"mcc S3 object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/as_mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert objects to mcc class — as_mcc","text":"","code":"# Convert a data.frame to MCC object library(dplyr)  # Create a simple data.frame with MCC results mcc_data <- data.frame(   time = c(1, 2, 3, 4, 5),   mcc = c(0.1, 0.3, 0.5, 0.7, 1.0) )  # Convert to MCC object (equation method) mcc_obj <- as_mcc(mcc_data, method = \"equation\") print(mcc_obj) #>  #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time   mcc #>   <dbl> <dbl> #> 1     1   0.1 #> 2     2   0.3 #> 3     3   0.5 #> 4     4   0.7 #> 5     5   1   is_mcc(mcc_obj)  # TRUE #> [1] TRUE  # Convert for SCI method (requires SumCIs column) sci_data <- data.frame(   time = c(1, 2, 3, 4, 5),   SumCIs = c(0.1, 0.3, 0.5, 0.7, 1.0) )  mcc_sci_obj <- as_mcc(sci_data, method = \"sci\") print(mcc_sci_obj) #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Sum of Cumulative Incidence Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time SumCIs #>   <dbl>  <dbl> #> 1     1    0.1 #> 2     2    0.3 #> 3     3    0.5 #> 4     4    0.7 #> 5     5    1    # Convert a list to MCC object mcc_list <- list(   mcc_final = data.frame(     time = c(1, 2, 3),     mcc = c(0.2, 0.5, 0.8)   ) )  mcc_from_list <- as_mcc(mcc_list, method = \"equation\") print(mcc_from_list) #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── MCC Estimates ── #>  #>   time mcc #> 1    1 0.2 #> 2    2 0.5 #> 3    3 0.8  # Clean up rm(mcc_data, sci_data, mcc_list, mcc_obj, mcc_sci_obj, mcc_from_list)"},{"path":"https://kennethataylor.github.io/mccount/reference/autoplot.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Auto-plot method for mcc objects — autoplot.mcc","title":"Auto-plot method for mcc objects — autoplot.mcc","text":"Convenience function automatically creates appropriate plot mcc objects. called using base R plot() function.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/autoplot.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Auto-plot method for mcc objects — autoplot.mcc","text":"","code":"# S3 method for class 'mcc' autoplot(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/autoplot.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Auto-plot method for mcc objects — autoplot.mcc","text":"x mcc object ... Additional arguments passed plot.mcc","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/autoplot.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Auto-plot method for mcc objects — autoplot.mcc","text":"ggplot2 object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/autoplot.mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Auto-plot method for mcc objects — autoplot.mcc","text":"","code":"# Create sample data library(dplyr) library(ggplot2) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   treatment = c(\"Control\", \"Control\", \"Treatment\", \"Treatment\",                 \"Treatment\", \"Treatment\", \"Control\", \"Control\") ) |>   arrange(id, time)  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\", by = \"treatment\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event  # Use autoplot (ggplot2 style) p <- autoplot(mcc_result) print(p)   # Customize with ggplot2 functions p_custom <- autoplot(mcc_result) +   theme_classic() +   labs(caption = \"Data from hypothetical study\") +   geom_hline(yintercept = 1, linetype = \"dashed\", alpha = 0.5)  print(p_custom)   # Clean up rm(df, mcc_result, p, p_custom)"},{"path":"https://kennethataylor.github.io/mccount/reference/compare_mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare mcc objects — compare_mcc","title":"Compare mcc objects — compare_mcc","text":"Compares two mcc objects returns summary differences. Useful comparing results different methods parameter settings.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/compare_mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare mcc objects — compare_mcc","text":"","code":"compare_mcc(x, y, tolerance = 1e-06)"},{"path":"https://kennethataylor.github.io/mccount/reference/compare_mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare mcc objects — compare_mcc","text":"x First mcc object y Second mcc object tolerance Numeric tolerance comparing MCC values (default: 1e-6)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/compare_mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare mcc objects — compare_mcc","text":"list summarizing comparison","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/compare_mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compare mcc objects — compare_mcc","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate MCC using different methods mcc_eq <- mcc(df, \"id\", \"time\", \"cause\", method = \"equation\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. mcc_sci <- mcc(df, \"id\", \"time\", \"cause\", method = \"sci\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Compare the results comparison <- compare_mcc(mcc_eq, mcc_sci) print(comparison) #>  #> ── MCC Object Comparison ─────────────────────────────────────────────────────── #> ! Objects differ in one or more aspects #>  #> ── Comparison Details ── #>  #> ✖ Methods match #> ✔ Weighted status matches #> ✔ Grouping status matches #> ✔ Grouping variables match #> ✔ Final values are close #> Maximum difference in final values: 0  # Clean up rm(df, mcc_eq, mcc_sci, comparison)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_grouped.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if mcc object is from grouped analysis — is_grouped","title":"Check if mcc object is from grouped analysis — is_grouped","text":"Check mcc object grouped analysis","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_grouped.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if mcc object is from grouped analysis — is_grouped","text":"","code":"is_grouped(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_grouped.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if mcc object is from grouped analysis — is_grouped","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_grouped.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if mcc object is from grouped analysis — is_grouped","text":"Logical indicating whether analysis grouped","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_grouped.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if mcc object is from grouped analysis — is_grouped","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\") ) |>   arrange(id, time)  # Ungrouped analysis mcc_ungrouped <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. is_grouped(mcc_ungrouped)  # FALSE #> [1] FALSE  # Grouped analysis mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"group\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event is_grouped(mcc_grouped)  # TRUE #> [1] TRUE  # Clean up rm(df, mcc_ungrouped, mcc_grouped)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is an mcc result — is_mcc","title":"Check if object is an mcc result — is_mcc","text":"Check object mcc result","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is an mcc result — is_mcc","text":"","code":"is_mcc(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is an mcc result — is_mcc","text":"x object test","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is an mcc result — is_mcc","text":"TRUE x mcc object, FALSE otherwise","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if object is an mcc result — is_mcc","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Test if it's an MCC object is_mcc(mcc_result)  # TRUE #> [1] TRUE  # Clean up rm(df, mcc_result)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_weighted.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if mcc object uses weighted estimation — is_weighted","title":"Check if mcc object uses weighted estimation — is_weighted","text":"Check mcc object uses weighted estimation","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_weighted.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if mcc object uses weighted estimation — is_weighted","text":"","code":"is_weighted(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/is_weighted.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if mcc object uses weighted estimation — is_weighted","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_weighted.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if mcc object uses weighted estimation — is_weighted","text":"Logical indicating whether weighted estimation used","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/is_weighted.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if mcc object uses weighted estimation — is_weighted","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate unweighted MCC mcc_unweighted <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. is_weighted(mcc_unweighted)  # FALSE #> [1] FALSE  # Create weighted data df_weighted <- df |>   group_by(id) |>   slice(1) |>   ungroup() |>   mutate(weights = runif(n(), 0.5, 2.0)) |>   select(id, weights) |>   right_join(df, by = \"id\") |>   arrange(id, time)  # Calculate weighted MCC mcc_weighted <- mcc(df_weighted, \"id\", \"time\", \"cause\", weights = \"weights\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. is_weighted(mcc_weighted)  # TRUE #> [1] TRUE  # Clean up rm(df, df_weighted, mcc_unweighted, mcc_weighted)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mean Cumulative Count (MCC) — mcc","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"Calculates Mean Cumulative Count (MCC), estimates expected cumulative number events per person time, accounting potential competing risks censoring. function provides unified interface two different estimation approaches: \"equation\" method sum cumulative incidence (\"sci\") method. \"equation\" method calculates MCC directly probability calculations, \"sci\" method derives MCC summing cumulative incidence functions recurrent event. two approaches yield equivalent results certain circumstances. , choice methods depe#' Calculate Mean Cumulative Count (MCC) Calculates Mean Cumulative Count (MCC), estimates expected cumulative number events per person time, accounting potential competing risks censoring. function provides unified interface two different estimation approaches: \"equation\" method sum cumulative incidence (\"sci\") method. \"equation\" method calculates MCC directly probability calculations, \"sci\" method derives MCC summing cumulative incidence functions recurrent event. two approaches yield equivalent results certain circumstances. , choice methods depends specific outcome, analysis needs, data structure.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"","code":"mcc(   data,   id_var,   time_var,   cause_var,   by = NULL,   method = c(\"equation\", \"sci\"),   tstart_var = NULL,   weights = NULL,   adjust_times = TRUE,   time_precision = 1e-06,   include_details = TRUE )"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"data (data.frame tbl_df) data.frame tibble containing required variables id_var (string) Name column containing participant identifiers time_var (string) Name column containing follow-times cause_var (string) Name column containing event indicator values (1 = event interest, 2 = competing risk, 0 = censoring) (string, optional) Name column group calculating MCC within subgroups. provided, MCC calculated separately level variable method (string) Method use MCC calculation. Either \"equation\" (default) \"sci\" (sum cumulative incidence) tstart_var (string) Name column containing start times follow-incorporating left truncation. allowed specified method = \"sci\". NULL (default), constant value 0 used calculation (.e., right truncation ) weights (string, optional) Name column containing weights weighted MCC estimation. Currently supported method = \"equation\". provided, weights must non-negative non-missing adjust_times (logical) TRUE (default), automatically adjusts times account outcome events competing risk events occurring time time_precision (numeric) Precision used adjusting simultaneous events (default: 1e-6). Must positive numeric value include_details (logical) Whether include detailed calculation tables intermediate objects output. Default TRUE, returns calculation details. Setting FALSE returns final MCC estimates, making function efficient bootstrapping","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"S3 object class \"mcc\" method-specific subclasses. object contains: include_details = TRUE (default): method = \"equation\": mcc_final: tibble columns time mcc mcc_table: tibble detailed calculation steps original_data: input data standardized column names adjusted_data: Present time adjustments applied method = \"sci\": mcc_final: tibble columns time MCC (expressed SumCIs) sci_table: tibble cumulative incidence event number sum all_cis: list cumulative incidence data event number mcc_base: tibble calculation details MCC original_data: input data standardized column names adjusted_data: Present time adjustments applied include_details = FALSE: mcc_final: tibble columns time mcc (SumCIs method = \"sci\") objects include metadata: method: method used calculation weighted: Logical indicating whether weighted estimation used by_group: Name grouping variable (grouped analyses) call: original function call specified, tibbles contain additional column grouping variable values, object additional class \"mcc_grouped\".","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"Dong H, Robison LL, Leisenring WM, Martin LJ, Armstrong GT, Yasui Y. Estimating burden recurrent events presence competing risks: method mean cumulative count. J Epidemiol. 2015 Apr 1;181(7):532-40. doi: 10.1093/aje/kwu289 Gaber CE, Edwards JK, Lund JL, Peery AF, Richardson DB, Kinlaw AC. Inverse Probability Weighting Estimate Exposure Effects Burden Recurrent Outcomes Presence Competing Events. J Epidemiol. 2023;192(5):830-839. doi: 10.1093/aje/kwad031","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Mean Cumulative Count (MCC) — mcc","text":"","code":"# Attach dplyr library(dplyr) # Create sample data with recurrent events df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3), # Times will be adjusted for id = 5   cause = c(0, 0, 2, 1, 1, 1, 1, 2)  ) |>   arrange(id, time)  # Sort the data by id and time  # Print the dataset print(\"Hypothetical dataset from Dong et al. (2015):\") #> [1] \"Hypothetical dataset from Dong et al. (2015):\" print(df) #>   id time cause #> 1  1    8     0 #> 2  2    1     0 #> 3  3    5     2 #> 4  4    2     1 #> 5  4    6     1 #> 6  4    7     1 #> 7  5    3     1 #> 8  5    3     2  # Calculate MCC using the equation method mcc_eq <- mcc(df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Print the S3 object mcc_eq #>  #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time   mcc #>   <dbl> <dbl> #> 1     0  0    #> 2     2  0.25 #> 3     3  0.5  #> 4     6  0.75 #> 5     7  1    #> ── Call ── #>  #> mcc(data = df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\")  # Get summary summary(mcc_eq) #>  #> ── Summary of Mean Cumulative Count Results ──────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── Summary Statistics ── #>  #> Number of time points: 5 #> Time range: [0, 7] #> Final MCC: 1  # Extract MCC estimates mcc_estimates(mcc_eq) #> # A tibble: 5 × 2 #>    time   mcc #>   <dbl> <dbl> #> 1     0  0    #> 2     2  0.25 #> 3     3  0.5  #> 4     6  0.75 #> 5     7  1     # Extract calculation details mcc_details(mcc_eq) #> # A tibble: 9 × 8 #>    time nrisk censor event cmprk overall_surv_previous ave_events   mcc #>   <dbl> <dbl>  <dbl> <dbl> <dbl>                 <dbl>      <dbl> <dbl> #> 1  0        5      0     0     0                  1          0     0    #> 2  1        5      1     0     0                  1          0     0    #> 3  2        4      0     1     0                  1          0.25  0.25 #> 4  3        4      0     1     0                  1          0.25  0.5  #> 5  3.00     4      0     0     1                  1          0     0.5  #> 6  5        3      0     0     1                  0.75       0     0.5  #> 7  6        2      0     1     0                  0.5        0.25  0.75 #> 8  7        2      1     1     0                  0.5        0.25  1    #> 9  8        1      1     0     0                  0.5        0     1     # Calculate MCC using the sum of cumulative incidence method mcc_sci <- mcc(   df,   id_var = \"id\",   time_var = \"time\",   cause_var = \"cause\",   method = \"sci\" ) #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  mcc_sci #>  #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Sum of Cumulative Incidence Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time SumCIs #>   <dbl>  <dbl> #> 1     0   0    #> 2     2   0.25 #> 3     3   0.5  #> 4     6   0.75 #> 5     7   1    #> ── Call ── #>  #> mcc(data = df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\",  #>     method = \"sci\")  # Clean up rm(df, mcc_eq, mcc_sci)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract calculation details from mcc objects — mcc_details","title":"Extract calculation details from mcc objects — mcc_details","text":"Extract calculation details mcc objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract calculation details from mcc objects — mcc_details","text":"","code":"mcc_details(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract calculation details from mcc objects — mcc_details","text":"x mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract calculation details from mcc objects — mcc_details","text":"tibble calculation details, NULL available","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract calculation details from mcc objects — mcc_details","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate MCC with details mcc_eq <- mcc(df, \"id\", \"time\", \"cause\", method = \"equation\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. mcc_sci <- mcc(df, \"id\", \"time\", \"cause\", method = \"sci\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Extract calculation details details_eq <- mcc_details(mcc_eq)   # Returns mcc_table details_sci <- mcc_details(mcc_sci) # Returns sci_table  print(details_eq) #> # A tibble: 9 × 8 #>    time nrisk censor event cmprk overall_surv_previous ave_events   mcc #>   <dbl> <dbl>  <dbl> <dbl> <dbl>                 <dbl>      <dbl> <dbl> #> 1  0        5      0     0     0                  1          0     0    #> 2  1        5      1     0     0                  1          0     0    #> 3  2        4      0     1     0                  1          0.25  0.25 #> 4  3        4      0     1     0                  1          0.25  0.5  #> 5  3.00     4      0     0     1                  1          0     0.5  #> 6  5        3      0     0     1                  0.75       0     0.5  #> 7  6        2      0     1     0                  0.5        0.25  0.75 #> 8  7        2      1     1     0                  0.5        0.25  1    #> 9  8        1      1     0     0                  0.5        0     1    print(details_sci) #> # A tibble: 9 × 5 #>    time   CI1   CI2   CI3 SumCIs #>   <dbl> <dbl> <dbl> <dbl>  <dbl> #> 1  0     0     0     0      0    #> 2  1     0     0     0      0    #> 3  2     0.25  0     0      0.25 #> 4  3     0.5   0     0      0.5  #> 5  3.00  0.5   0     0      0.5  #> 6  5     0.5   0     0      0.5  #> 7  6     0.5   0.25  0      0.75 #> 8  7     0.5   0.25  0.25   1    #> 9  8     0.5   0.25  0.25   1     # Clean up rm(df, mcc_eq, mcc_sci, details_eq, details_sci)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_equation.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mean Cumulative Count using the equation method — mcc_equation","title":"Calculate Mean Cumulative Count using the equation method — mcc_equation","text":"Calculate Mean Cumulative Count using equation method","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_equation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mean Cumulative Count using the equation method — mcc_equation","text":"","code":"mcc_equation(   data,   id_var,   time_var,   cause_var,   weights = NULL,   adjust_times = TRUE,   time_precision = 1e-06,   include_details = TRUE )"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_equation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mean Cumulative Count using the equation method — mcc_equation","text":"data data.frame tibble containing required variables id_var Name column containing participant IDs (string symbol) time_var Name column containing follow-times (string symbol) cause_var Name column containing event indicators (string symbol) (1=event interest, 2=competing risk, 0=censoring) weights Name column containing weights (string, optional) adjust_times Whether automatically adjust times simultaneous events (default: TRUE) time_precision Precision used adjusting simultaneous events (default: 1e-6) include_details Whether include detailed calculation tables intermediate objects output (default: TRUE).","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_equation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mean Cumulative Count using the equation method — mcc_equation","text":"list containing MCC results. include_details = TRUE, returns complete calculation details. Otherwise, returns final MCC estimates.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_estimates.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract MCC estimates from mcc objects — mcc_estimates","title":"Extract MCC estimates from mcc objects — mcc_estimates","text":"Extract MCC estimates mcc objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_estimates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract MCC estimates from mcc objects — mcc_estimates","text":"","code":"mcc_estimates(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_estimates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract MCC estimates from mcc objects — mcc_estimates","text":"x mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_estimates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract MCC estimates from mcc objects — mcc_estimates","text":"tibble MCC estimates","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_estimates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract MCC estimates from mcc objects — mcc_estimates","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2) ) |>   arrange(id, time)  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Extract MCC estimates estimates <- mcc_estimates(mcc_result) print(estimates) #> # A tibble: 5 × 2 #>    time   mcc #>   <dbl> <dbl> #> 1     0  0    #> 2     2  0.25 #> 3     3  0.5  #> 4     6  0.75 #> 5     7  1     # For grouped analysis df_grouped <- df |>   mutate(group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\"))  mcc_grouped <- mcc(df_grouped, \"id\", \"time\", \"cause\", by = \"group\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event estimates_grouped <- mcc_estimates(mcc_grouped) print(estimates_grouped) #> # A tibble: 6 × 3 #>   group  time   mcc #> * <chr> <dbl> <dbl> #> 1 A         0   0   #> 2 A         3   0.5 #> 3 B         0   0   #> 4 B         2   0.5 #> 5 B         6   1   #> 6 B         7   1.5  # Clean up rm(df, df_grouped, mcc_result, mcc_grouped, estimates, estimates_grouped)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_final_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get final MCC value for each group — mcc_final_values","title":"Get final MCC value for each group — mcc_final_values","text":"Extracts final (maximum time) MCC value group grouped analysis, overall final MCC value ungrouped analyses.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_final_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get final MCC value for each group — mcc_final_values","text":"","code":"mcc_final_values(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_final_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get final MCC value for each group — mcc_final_values","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_final_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get final MCC value for each group — mcc_final_values","text":"named numeric vector final MCC values","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_final_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get final MCC value for each group — mcc_final_values","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\") ) |>   arrange(id, time)  # Ungrouped analysis mcc_ungrouped <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. mcc_final_values(mcc_ungrouped) #> Overall  #>       1   # Grouped analysis mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"group\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event mcc_final_values(mcc_grouped) #>   A   B  #> 0.5 1.5   # Clean up rm(df, mcc_ungrouped, mcc_grouped)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_grouping_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Get grouping variable name from grouped mcc object — mcc_grouping_var","title":"Get grouping variable name from grouped mcc object — mcc_grouping_var","text":"Get grouping variable name grouped mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_grouping_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get grouping variable name from grouped mcc object — mcc_grouping_var","text":"","code":"mcc_grouping_var(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_grouping_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get grouping variable name from grouped mcc object — mcc_grouping_var","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_grouping_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get grouping variable name from grouped mcc object — mcc_grouping_var","text":"Character string grouping variable name, NULL grouped","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_grouping_var.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get grouping variable name from grouped mcc object — mcc_grouping_var","text":"","code":"# Create sample data with groups library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   treatment = c(\"Control\", \"Control\", \"Treatment\", \"Treatment\",                 \"Treatment\", \"Treatment\", \"Control\", \"Control\") ) |>   arrange(id, time)  # Grouped analysis mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"treatment\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event  # Get grouping variable name mcc_grouping_var(mcc_grouped)  # \"treatment\" #> [1] \"treatment\"  # Clean up rm(df, mcc_grouped)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract unique groups from grouped mcc object — mcc_groups","title":"Extract unique groups from grouped mcc object — mcc_groups","text":"Extract unique groups grouped mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract unique groups from grouped mcc object — mcc_groups","text":"","code":"mcc_groups(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract unique groups from grouped mcc object — mcc_groups","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_groups.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract unique groups from grouped mcc object — mcc_groups","text":"Character vector unique group values, NULL grouped","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_groups.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract unique groups from grouped mcc object — mcc_groups","text":"","code":"# Create sample data with groups library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5, 6, 7, 8),   time = c(8, 1, 5, 2, 6, 7, 3, 3, 4, 9, 2),   cause = c(0, 0, 2, 1, 1, 1, 1, 2, 1, 0, 2),   treatment = c(\"Control\", \"Control\", \"Treatment\", \"Treatment\",                 \"Treatment\", \"Treatment\", \"Control\", \"Control\",                 \"Placebo\", \"Placebo\", \"Placebo\") ) |>   arrange(id, time)  # Grouped analysis mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"treatment\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 6 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event  # Get all unique groups mcc_groups(mcc_grouped)  # \"Control\", \"Placebo\", \"Treatment\" #> [1] \"Control\"   \"Treatment\" \"Placebo\"    # Clean up rm(df, mcc_grouped)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_method.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the method used for MCC calculation — mcc_method","title":"Get the method used for MCC calculation — mcc_method","text":"Get method used MCC calculation","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the method used for MCC calculation — mcc_method","text":"","code":"mcc_method(x)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the method used for MCC calculation — mcc_method","text":"x mcc object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the method used for MCC calculation — mcc_method","text":"Character string indicating method (\"equation\" \"sci\")","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_method.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the method used for MCC calculation — mcc_method","text":"","code":"# Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\") ) |>   arrange(id, time)  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Get the method used mcc_method(mcc_result) #> [1] \"equation\"  # Clean up rm(df, mcc_result)"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_sci.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Mean Cumulative Count using the Sum of Cumulative Incidence method — mcc_sci","title":"Calculate Mean Cumulative Count using the Sum of Cumulative Incidence method — mcc_sci","text":"Calculate Mean Cumulative Count using Sum Cumulative Incidence method","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_sci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Mean Cumulative Count using the Sum of Cumulative Incidence method — mcc_sci","text":"","code":"mcc_sci(   data,   id_var,   time_var,   cause_var,   tstart_var = NULL,   adjust_times = TRUE,   time_precision = 1e-06,   include_details = TRUE )"},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_sci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Mean Cumulative Count using the Sum of Cumulative Incidence method — mcc_sci","text":"data data.frame tibble containing required variables id_var Name column containing participant IDs (string symbol) time_var Name column containing follow-event times (string symbol) cause_var Name column containing event indicators (string symbol) (1=event interest, 2=competing risk, 0=censoring) tstart_var Name column containing start times follow-(string symbol, optional). NULL (default), constant value 0 used observations. adjust_times Whether automatically adjust times simultaneous events (default: TRUE) time_precision Precision used adjusting simultaneous events (default: 1e-6) include_details Whether include detailed calculation tables intermediate objects output (default: TRUE).","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mcc_sci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Mean Cumulative Count using the Sum of Cumulative Incidence method — mcc_sci","text":"list containing MCC results. include_details=TRUE, returns complete calculation details. Otherwise, returns final MCC estimates.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":null,"dir":"Reference","previous_headings":"","what":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"Calculates mean cumulative count (MCC) estimate expected cumulative number recurrent events per person time presence competing risks censoring. Implements Dong-Yasui equation method sum cumulative incidence method described Dong et al. (2015) doi:10.1093/aje/kwu289 . Supports inverse probability weighting causal inference outlined Gaber et al. (2023) doi:10.1093/aje/kwad031 . Provides S3 classes methods printing, summarizing, plotting, extracting results. Handles grouped analyses integrates 'ggplot2' visualization.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"main-function","dir":"Reference","previous_headings":"","what":"Main Function","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"mcc() - estimates MCC","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"s-object-system","dir":"Reference","previous_headings":"","what":"S3 Object System","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"package uses S3 classes provide consistent, extensible interface: Base Class: mcc - MCC results inherit class Method-Specific Classes: mcc_equation - Results Dong-Yasui estimator mcc_sci - Results Sum Cumulative Incidence estimator Analysis-Type Classes: mcc_weighted - Results using weighting mcc_grouped - Results grouped/stratified analysis Classes combine hierarchically (e.g., c(\"mcc_grouped\", \"mcc_weighted\", \"mcc_equation\", \"mcc\")).","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"available-methods","dir":"Reference","previous_headings":"","what":"Available Methods","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"Generic S3 Methods: print.mcc() - Formatted display results summary.mcc() - Statistical summaries plot.mcc() - Visualization ggplot2 autoplot.mcc() - ggplot2-style plotting (ggplot2 loaded) .data.frame.mcc() - Convert standard data.frame as_mcc() - Convert objects MCC class Utility Functions: is_mcc() - Test object MCC result mcc_estimates() - Extract main results table mcc_details() - Extract calculation details mcc_method() - Get calculation method used is_weighted(), is_grouped() - Check analysis properties mcc_groups(), mcc_grouping_var() - Access grouping information subset_mcc() - Filter grouped results mcc_final_values() - Extract final MCC values compare_mcc() - Compare two MCC objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"basic-usage","dir":"Reference","previous_headings":"","what":"Basic Usage","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"","code":"# Calculate MCC result <- mcc(data, \"id\", \"time\", \"cause\")  # Examine results result              # Uses print.mcc() summary(result)     # Uses summary.mcc() plot(result)        # Uses plot.mcc()  # Extract components estimates <- mcc_estimates(result) details <- mcc_details(result) final_values <- mcc_final_values(result)  # Grouped analysis grouped_result <- mcc(data, \"id\", \"time\", \"cause\", by = \"treatment\") plot(grouped_result) subset_mcc(grouped_result, \"Treatment A\")"},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"plotting","dir":"Reference","previous_headings":"","what":"Plotting","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"package provides flexible plotting S3 methods automatically adapt analysis type:","code":"# Basic plotting plot(mcc_result)                    # MCC over time plot(mcc_result, type = \"details\")  # Calculation components  # Customization plot(mcc_result, colors = c(\"red\", \"blue\"), title = \"Custom Title\")  # ggplot2 integration library(ggplot2) autoplot(mcc_result) + theme_classic()  # Further customization plot(mcc_result) +   geom_hline(yintercept = 1, linetype = \"dashed\") +   labs(caption = \"Dashed line at MCC = 1\")"},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"Core Methods: Dong H, Robison LL, Leisenring WM, Martin LJ, Armstrong GT, Yasui Y. Estimating burden recurrent events presence competing risks: method mean cumulative count. J Epidemiol. 2015;181(7):532-40. Weighted Extension: Gaber CE, Edwards JK, Lund JL, Peery AF, Richardson DB, Kinlaw AC. Inverse Probability Weighting Estimate Exposure Effects Burden Recurrent Outcomes Presence Competing Events. J Epidemiol. 2023;192(5):830-839.","code":""},{"path":[]},{"path":"https://kennethataylor.github.io/mccount/reference/mccount-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"mccount: Estimate Recurrent Event Burden with Competing Risks — mccount-package","text":"Maintainer: Kenneth . Taylor kenneth.taylor.dpt@gmail.com (ORCID)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/plot.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot MCC results — plot.mcc","title":"Plot MCC results — plot.mcc","text":"Creates plots Mean Cumulative Count (MCC) results. plotting method automatically adapts based mcc object class whether analysis grouped.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/plot.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot MCC results — plot.mcc","text":"","code":"# S3 method for class 'mcc' plot(   x,   type = c(\"mcc\", \"details\"),   groups = NULL,   conf_int = FALSE,   colors = NULL,   title = NULL,   subtitle = NULL,   ... )"},{"path":"https://kennethataylor.github.io/mccount/reference/plot.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot MCC results — plot.mcc","text":"x mcc object type Character string specifying plot type. Options : \"mcc\" (default): Plot MCC estimates time \"details\": Plot calculation details (method-specific) groups Character vector specifying groups include grouped analyses. NULL (default), groups included conf_int Logical indicating whether include confidence intervals available colors Character vector colors use groups. NULL, uses default colors title Character string plot title. NULL, generates automatic title subtitle Character string plot subtitle. NULL, generates automatic subtitle ... Additional arguments passed ggplot2 functions","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/plot.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot MCC results — plot.mcc","text":"ggplot2 object","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/plot.mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot MCC results — plot.mcc","text":"","code":"if (FALSE) { # \\dontrun{ # Create sample data df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\") )  # Calculate MCC mcc_result <- mcc(df, \"id\", \"time\", \"cause\")  # Plot MCC over time plot(mcc_result)  # Plot calculation details plot(mcc_result, type = \"details\")  # Grouped analysis mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"group\") plot(mcc_grouped) } # }  # Create sample data library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3),   cause = c(0, 0, 2, 1, 1, 1, 1, 2),   group = c(\"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"A\", \"A\") ) |>   arrange(id, time)  # Basic MCC plot (ungrouped) mcc_result <- mcc(df, \"id\", \"time\", \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. plot(mcc_result)   # Plot calculation details plot(mcc_result, type = \"details\")   # Grouped analysis with custom colors mcc_grouped <- mcc(df, \"id\", \"time\", \"cause\", by = \"group\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event plot(mcc_grouped)   # Customize the grouped plot plot(mcc_grouped,      colors = c(\"red\", \"blue\"),      title = \"MCC by Treatment Group\",      subtitle = \"Comparison of Event Burden\")   # Plot details for grouped analysis plot(mcc_grouped, type = \"details\")   # Plot only specific groups plot(mcc_grouped, groups = c(\"A\"))   # Compare different methods mcc_sci <- mcc(df, \"id\", \"time\", \"cause\", method = \"sci\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject. plot(mcc_sci)  plot(mcc_sci, type = \"details\")   # Clean up rm(df, mcc_result, mcc_grouped, mcc_sci)"},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for mcc objects — print.mcc","title":"Print method for mcc objects — print.mcc","text":"Print method mcc objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for mcc objects — print.mcc","text":"","code":"# S3 method for class 'mcc' print(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for mcc objects — print.mcc","text":"x mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for mcc objects — print.mcc","text":"x invisibly","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print method for mcc objects — print.mcc","text":"","code":"# Attach dplyr library(dplyr) # Create sample data with recurrent events df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3), # Times will be adjusted for id = 5   cause = c(0, 0, 2, 1, 1, 1, 1, 2)  ) |>   arrange(id, time)  # Sort the data by id and time  # Calculate MCC using the equation method (default) mcc_eq <- mcc(df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Print the S3 object (uses print.mcc method) mcc_eq #>  #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time   mcc #>   <dbl> <dbl> #> 1     0  0    #> 2     2  0.25 #> 3     3  0.5  #> 4     6  0.75 #> 5     7  1    #> ── Call ── #>  #> mcc(data = df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\")  # Calculate MCC using the sum of cumulative incidence method mcc_sci <- mcc(   df,   id_var = \"id\",   time_var = \"time\",   cause_var = \"cause\",   method = \"sci\" ) #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  # Print the S3 object mcc_sci #>  #> ── Mean Cumulative Count Results ─────────────────────────────────────────────── #> ℹ Method: Sum of Cumulative Incidence Method #>  #> ── MCC Estimates ── #>  #> # A tibble: 5 × 2 #>    time SumCIs #>   <dbl>  <dbl> #> 1     0   0    #> 2     2   0.25 #> 3     3   0.5  #> 4     6   0.75 #> 5     7   1    #> ── Call ── #>  #> mcc(data = df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\",  #>     method = \"sci\")  # Clean up rm(df, mcc_eq, mcc_sci)"},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for MCC comparison objects — print.mcc_comparison","title":"Print method for MCC comparison objects — print.mcc_comparison","text":"Print method MCC comparison objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for MCC comparison objects — print.mcc_comparison","text":"","code":"# S3 method for class 'mcc_comparison' print(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for MCC comparison objects — print.mcc_comparison","text":"x mcc_comparison object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.mcc_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for MCC comparison objects — print.mcc_comparison","text":"x invisibly","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.summary.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Print method for mcc summary objects — print.summary.mcc","title":"Print method for mcc summary objects — print.summary.mcc","text":"Print method mcc summary objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.summary.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print method for mcc summary objects — print.summary.mcc","text":"","code":"# S3 method for class 'summary.mcc' print(x, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/print.summary.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print method for mcc summary objects — print.summary.mcc","text":"x summary.mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/print.summary.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print method for mcc summary objects — print.summary.mcc","text":"x invisibly","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/subset_mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset mcc object by groups — subset_mcc","title":"Subset mcc object by groups — subset_mcc","text":"grouped mcc objects, extracts results specified groups . useful focusing specific groups interest creating custom visualizations.","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/subset_mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset mcc object by groups — subset_mcc","text":"","code":"subset_mcc(x, groups)"},{"path":"https://kennethataylor.github.io/mccount/reference/subset_mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset mcc object by groups — subset_mcc","text":"x grouped mcc object groups Character vector group names include","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/subset_mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset mcc object by groups — subset_mcc","text":"mcc object containing specified groups","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/subset_mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset mcc object by groups — subset_mcc","text":"","code":"# Create sample data with groups library(dplyr) df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5, 6, 7, 8),   time = c(8, 1, 5, 2, 6, 7, 3, 3, 4, 9, 2),   cause = c(0, 0, 2, 1, 1, 1, 1, 2, 1, 0, 2),   treatment = c(\"Control\", \"Control\", \"Treatment\", \"Treatment\",                 \"Treatment\", \"Treatment\", \"Control\", \"Control\",                 \"Placebo\", \"Placebo\", \"Placebo\") ) |>   arrange(id, time)  # Grouped analysis mcc_full <- mcc(df, \"id\", \"time\", \"cause\", by = \"treatment\") #> ℹ Adjusted time points for events occurring simultaneously for the same subject. #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 6 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event  # Show all groups mcc_groups(mcc_full) #> [1] \"Control\"   \"Treatment\" \"Placebo\"    # Subset to specific groups mcc_subset <- subset_mcc(mcc_full, c(\"Control\", \"Treatment\")) mcc_groups(mcc_subset)  # Only \"Control\" and \"Treatment\" #> [1] \"Control\"   \"Treatment\"  # Plot the subset plot(mcc_subset)   # Clean up rm(df, mcc_full, mcc_subset)"},{"path":"https://kennethataylor.github.io/mccount/reference/summary.mcc.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary method for mcc objects — summary.mcc","title":"Summary method for mcc objects — summary.mcc","text":"Summary method mcc objects","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/summary.mcc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary method for mcc objects — summary.mcc","text":"","code":"# S3 method for class 'mcc' summary(object, ...)"},{"path":"https://kennethataylor.github.io/mccount/reference/summary.mcc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary method for mcc objects — summary.mcc","text":"object mcc object ... Additional arguments (currently unused)","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/summary.mcc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary method for mcc objects — summary.mcc","text":"summary object class summary.mcc","code":""},{"path":"https://kennethataylor.github.io/mccount/reference/summary.mcc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary method for mcc objects — summary.mcc","text":"","code":"# Attach dplyr library(dplyr) # Create sample data with recurrent events df <- data.frame(   id = c(1, 2, 3, 4, 4, 4, 5, 5),   time = c(8, 1, 5, 2, 6, 7, 3, 3), # Times will be adjusted for id = 5   cause = c(0, 0, 2, 1, 1, 1, 1, 2)  ) |>   arrange(id, time)  # Sort the data by id and time  # Calculate MCC using the equation method (default) mcc_eq <- mcc(df, id_var = \"id\", time_var = \"time\", cause_var = \"cause\") #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  summary(mcc_eq) #>  #> ── Summary of Mean Cumulative Count Results ──────────────────────────────────── #> ℹ Method: Dong-Yasui Equation Method #>  #> ── Summary Statistics ── #>  #> Number of time points: 5 #> Time range: [0, 7] #> Final MCC: 1  # Calculate MCC using the sum of cumulative incidence method mcc_sci <- mcc(   df,   id_var = \"id\",   time_var = \"time\",   cause_var = \"cause\",   method = \"sci\" ) #> Warning: Found 1 `id_var` where last observation is an event of interest (`cause_var` = #> 1) #> ! ID: 4 #> ℹ `mcc()` implicitly assumes these `id_var`s are censored at the maximum #>   `time_var` This may impact MCC calculations if these participants were #>   actually censored or experienced competing risk before the maximum value of #>   `time_var` #> ℹ If this implicit assumption is incorrect, estimates will be incorrect unless #>   you add an additional row after the current last row with the censoring or #>   competing risk event #> ℹ Adjusted time points for events occurring simultaneously for the same subject.  summary(mcc_sci) #>  #> ── Summary of Mean Cumulative Count Results ──────────────────────────────────── #> ℹ Method: Sum of Cumulative Incidence Method #>  #> ── Summary Statistics ── #>  #> Number of time points: 5 #> Time range: [0, 7] #> Final MCC: 1  # Clean up rm(df, mcc_eq, mcc_sci)"},{"path":"https://kennethataylor.github.io/mccount/news/index.html","id":"mccount-development-version","dir":"Changelog","previous_headings":"","what":"mccount (development version)","title":"mccount (development version)","text":"Initial CRAN submission.","code":""}]
